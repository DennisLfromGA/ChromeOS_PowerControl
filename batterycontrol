#!/bin/bash

CONFIG_FILE="$HOME/.batterycontrol_config"
CHARGER_PATH="/sys/class/power_supply/CROS_USBPD_CHARGER0/online"
BATTERY_PATH="/sys/class/power_supply/BAT0/capacity"
RUN_FLAG="$HOME/.batterycontrol_enabled"

DEFAULT_CHARGE_MAX=77
DEFAULT_CHARGE_MIN=74

load_config() {
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
    else
        CHARGE_MAX=$DEFAULT_CHARGE_MAX
        CHARGE_MIN=$DEFAULT_CHARGE_MIN
    fi
}

save_config() {
    echo "CHARGE_MAX=$CHARGE_MAX" > "$CONFIG_FILE"
    echo "CHARGE_MIN=$CHARGE_MIN" >> "$CONFIG_FILE"
}

set_thresholds() {
    if ! [[ "$1" =~ ^[0-9]+$ && "$2" =~ ^[0-9]+$ ]]; then
        echo "Error: Both thresholds must be integers."
        exit 1
    fi
    if [ "$1" -gt 100 ] || [ "$2" -lt 10 ]; then
        echo "Error: CHARGE_MAX cannot be more than 100, and CHARGE_MIN cannot be less than 10."
        exit 1
    fi
    if [ "$2" -ge "$1" ]; then
        echo "Error: CHARGE_MIN must be less than CHARGE_MAX."
        exit 1
    fi

    echo "Battery Charge Status: MAX=$1, MIN=$2"
    CHARGE_MAX=$1
    CHARGE_MIN=$2
    save_config
}

toggle_script() {
    if [ "$1" == "on" ]; then
        touch "$RUN_FLAG"
        echo "Script enabled."
    elif [ "$1" == "off" ]; then
        rm -f "$RUN_FLAG"
        echo "Script disabled."
    else
        echo "Usage: $0 toggle [on|off]"
        exit 1
    fi
}

show_help() {
    echo "Battery Control Script - Available Commands:"
    echo
    echo "  help"
    echo "    Show this help message."
    echo
    echo "  set <MAX> <MIN>"
    echo "    Set battery charge thresholds. Max and Min."
    echo "    Example: sudo batterycontrol set 80 75"
    echo
    echo "  toggle [on|off]"
    echo "    Enable or disable the control loop."
    echo "    Example: sudo batterycontrol toggle on"
    echo
    echo "  no_turbo [1|0]"
    echo "    Toggle Intel Turbo Boost (1=disable, 0=enable)."
    echo "    Example: sudo batterycontrol no_turbo 1"
    echo
    echo "  uninstall"
    echo "    Launch the uninstaller for ChromeOS_BatteryControl."
    echo
}

# --- Command dispatcher ---
case "$1" in
    set)
        set_thresholds "$2" "$3"
        exit 0
        ;;
    toggle)
        toggle_script "$2"
        exit 0
        ;;
    no_turbo)
        if [[ "$2" != "0" && "$2" != "1" ]]; then
            echo "Usage: $0 no_turbo [1|0]"
            exit 1
        fi
        if [ -w /sys/devices/system/cpu/intel_pstate/no_turbo ]; then
            echo "$2" | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo > /dev/null
            echo "Turbo Boost is now set to: $2"
        else
            echo "Permission denied or Turbo Boost control not available."
            exit 1
        fi
        exit 0
        ;;
    uninstall)
    if [ -x "/usr/local/bin/ChromeOS_BatteryControl/Uninstall_ChromeOS_BatteryControl.sh" ]; then
        sudo bash /usr/local/bin/ChromeOS_BatteryControl/Uninstall_ChromeOS_BatteryControl.sh
    else
        echo "Uninstall script not found or not executable."
        exit 1
    fi
    exit 0
    ;;
    help | --help | -h)
        show_help
        exit 0
        ;;
    "")
        # No argument given, continue to monitoring loop below
        ;;
    *)
        echo "Unknown command: $1"
        echo "Use '$0 help' to see available commands."
        exit 1
        ;;
esac

# Load config and begin monitoring loop ONLY if no command was given
load_config

echo "Starting battery control monitoring loop. Press Ctrl+C to exit."

while true; do
    if [ ! -f "$RUN_FLAG" ]; then
        sleep 120
        continue
    fi

    if [ -f "$BATTERY_PATH" ]; then
        CHARGE=$(cat "$BATTERY_PATH" 2>/dev/null)
    else
        sleep 120
        continue
    fi

    if [ -f "$CHARGER_PATH" ]; then
        AC_ON=$(cat "$CHARGER_PATH" 2>/dev/null)
    else
        sleep 120
        continue
    fi

    if [ "$AC_ON" -eq 1 ]; then
        if [ "$CHARGE" -ge "$CHARGE_MAX" ]; then
            sudo ectool chargecontrol idle >/dev/null 2>&1
        elif [ "$CHARGE" -le "$CHARGE_MIN" ]; then
            sudo ectool chargecontrol normal >/dev/null 2>&1
        fi
    else
        sudo ectool chargecontrol normal >/dev/null 2>&1
    fi

    sleep 120
done
